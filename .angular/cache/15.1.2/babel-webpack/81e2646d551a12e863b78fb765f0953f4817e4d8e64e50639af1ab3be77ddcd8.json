{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nconst _c0 = [\"class\", \"app-servers\"];\nfunction ServersComponent_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Server was created, server name is \", ctx_r0.serverName, \"\\n\");\n  }\n}\nfunction ServersComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"No server was created!\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ServersComponent {\n  constructor() {\n    this.allowNewServer = false;\n    this.serverCreationStatus = 'No server was created!';\n    this.serverName = 'Test Server';\n    this.serverCreated = false;\n    this.testText = 'Då ska vi se om det fungerar.';\n    setTimeout(() => {\n      this.allowNewServer = true;\n    }, 2000);\n  }\n  onCreateServer() {\n    this.serverCreated = true;\n    this.serverCreationStatus = 'Server was created! Name is ' + this.serverName;\n  }\n  onUpdateServer(event) {\n    this.serverName = event.target.value;\n  }\n}\nServersComponent.ɵfac = function ServersComponent_Factory(t) {\n  return new (t || ServersComponent)();\n};\nServersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ServersComponent,\n  selectors: [[\"\", 8, \"app-servers\"]],\n  attrs: _c0,\n  decls: 12,\n  vars: 5,\n  consts: [[\"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [3, \"innerText\"], [\";\", \"\", \"else\", \"\", \"noServer\", \"\", 4, \"ngIf\"], [\"noServer\", \"\"], [\";\", \"\", \"else\", \"\", \"noServer\", \"\"]],\n  template: function ServersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"label\");\n      i0.ɵɵtext(1, \"Server name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function ServersComponent_Template_input_ngModelChange_2_listener($event) {\n        return ctx.serverName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ServersComponent_Template_button_click_3_listener() {\n        return ctx.onCreateServer();\n      });\n      i0.ɵɵtext(4, \" Add Server\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"p\", 2);\n      i0.ɵɵtemplate(6, ServersComponent_p_6_Template, 2, 1, \"p\", 3);\n      i0.ɵɵtemplate(7, ServersComponent_ng_template_7_Template, 2, 0, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelement(9, \"p\", 2)(10, \"app-server\")(11, \"app-server\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.serverName);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.allowNewServer);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"innerText\", ctx.serverCreationStatus);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.serverCreated);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"innerText\", ctx.testText);\n    }\n  },\n  dependencies: [i1.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAeAA,4BAAyC;IACvCA,YACF;IAAAA,iBAAI;;;;IADFA,eACF;IADEA,sFACF;;;;;IACuBA,yBAAG;IAAAA,sCAAsB;IAAAA,iBAAI;;;ACVpD,OAAM,MAAOC,gBAAgB;EAM3BC;IALA,mBAAc,GAAG,KAAK;IACtB,yBAAoB,GAAG,wBAAwB;IAC/C,eAAU,GAAG,aAAa;IAC1B,kBAAa,GAAG,KAAK;IAQrB,aAAQ,GAAG,+BAA+B;IALxCC,UAAU,CAAC,MAAK;MACd,IAAI,CAACC,cAAc,GAAG,IAAI;IAC5B,CAAC,EAAE,IAAI,CAAC;EACV;EAIAC,cAAc;IACZ,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB,IAAI,CAACC,oBAAoB,GACvB,8BAA8B,GAAG,IAAI,CAACC,UAAU;EACpD;EAEAC,cAAc,CAACC,KAAY;IACzB,IAAI,CAACF,UAAU,GAAsBE,KAAK,CAACC,MAAO,CAACC,KAAK;EAC1D;;AAtBWX,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR7BlB,6BAAO;MAAAA,2BAAW;MAAAA,iBAAQ;MAE1BA,gCAAmE;MAA3BA;QAAA;MAAA,EAAwB;MAAhEA,iBAAmE;MAEnEA,iCAIC;MADCA;QAAA,OAASmB,oBAAgB;MAAA,EAAC;MAE1BnB,6BACF;MAAAA,iBAAS;MACTA,uBAA0C;MAI1CA,6DAEI;MACJA,kHAAkE;MAClEA,uBAA8B;;;MAjBUA,eAAwB;MAAxBA,wCAAwB;MAI9DA,eAA4B;MAA5BA,8CAA4B;MAK3BA,eAAkC;MAAlCA,oDAAkC;MAIjCA,eAAmB;MAAnBA,wCAAmB;MAIpBA,eAAsB;MAAtBA,wCAAsB","names":["i0","ServersComponent","constructor","setTimeout","allowNewServer","onCreateServer","serverCreated","serverCreationStatus","serverName","onUpdateServer","event","target","value","selectors","attrs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Johan\\Desktop\\AngularDemo\\my-first-app\\src\\app\\servers\\servers.component.html","C:\\Users\\Johan\\Desktop\\AngularDemo\\my-first-app\\src\\app\\servers\\servers.component.ts"],"sourcesContent":["<label>Server name</label>\r\n<!-- <input type=\"text\" class=\"form\" (input)=\"onUpdateServer($event)\" /> -->\r\n<input type=\"text\" class=\"form-control\" [(ngModel)]=\"serverName\" />\r\n<!-- <p>{{ serverName }}</p> -->\r\n<button\r\n  class=\"btn btn-primary\"\r\n  [disabled]=\"!allowNewServer\"\r\n  (click)=\"onCreateServer()\"\r\n>\r\n  Add Server\r\n</button>\r\n<p [innerText]=\"serverCreationStatus\"></p>\r\n\r\n<!-- <p [innerText]=\"allowNewServer\"></p> -->\r\n<!-- <p>{{ serverCreationStatus }}</p> -->\r\n<p *ngIf=\"serverCreated\" ; else noServer>\r\n  Server was created, server name is {{ serverName }}\r\n</p>\r\n<ng-template #noServer><p>No server was created!</p></ng-template>\r\n<p [innerText]=\"testText\"></p>\r\n\r\n<app-server></app-server>\r\n<app-server></app-server>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: '.app-servers' /* '[app-servers]', */,\r\n  /* template: `<app-server></app-server> <app-server></app-server>`, */\r\n  templateUrl: './servers.component.html',\r\n  styleUrls: ['./servers.component.css'],\r\n})\r\nexport class ServersComponent {\r\n  allowNewServer = false;\r\n  serverCreationStatus = 'No server was created!';\r\n  serverName = 'Test Server';\r\n  serverCreated = false;\r\n\r\n  constructor() {\r\n    setTimeout(() => {\r\n      this.allowNewServer = true;\r\n    }, 2000);\r\n  }\r\n\r\n  testText = 'Då ska vi se om det fungerar.';\r\n\r\n  onCreateServer() {\r\n    this.serverCreated = true;\r\n    this.serverCreationStatus =\r\n      'Server was created! Name is ' + this.serverName;\r\n  }\r\n\r\n  onUpdateServer(event: Event) {\r\n    this.serverName = (<HTMLInputElement>event.target).value;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}