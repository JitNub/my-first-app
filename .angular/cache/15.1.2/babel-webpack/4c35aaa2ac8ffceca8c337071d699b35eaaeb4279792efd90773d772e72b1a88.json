{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../server/server.component\";\nconst _c0 = [\"class\", \"app-servers\"];\nexport class ServersComponent {\n  constructor() {\n    this.allowNewServer = false;\n    this.serverCreationStatus = 'No server was created!';\n    this.serverName = 'Test Server';\n    this.testText = 'Då ska vi se om det fungerar.';\n    setTimeout(() => {\n      this.allowNewServer = true;\n    }, 2000);\n  }\n  onCreateServer() {\n    this.serverCreationStatus = 'Server was created! Name is ' + this.serverName;\n  }\n  onUpdateServer(event) {\n    this.serverName = event.target.value;\n  }\n}\nServersComponent.ɵfac = function ServersComponent_Factory(t) {\n  return new (t || ServersComponent)();\n};\nServersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ServersComponent,\n  selectors: [[\"\", 8, \"app-servers\"]],\n  attrs: _c0,\n  decls: 13,\n  vars: 6,\n  consts: [[\"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [3, \"innerText\"]],\n  template: function ServersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"label\");\n      i0.ɵɵtext(1, \"Server name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function ServersComponent_Template_input_ngModelChange_2_listener($event) {\n        return ctx.serverName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"p\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ServersComponent_Template_button_click_5_listener() {\n        return ctx.onCreateServer();\n      });\n      i0.ɵɵtext(6, \" Add Server\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"p\", 2);\n      i0.ɵɵelementStart(8, \"p\");\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"p\", 2)(11, \"app-server\")(12, \"app-server\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.serverName);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.serverName);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.allowNewServer);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"innerText\", ctx.serverCreationStatus);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.serverCreationStatus);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"innerText\", ctx.testText);\n    }\n  },\n  dependencies: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel, i2.ServerComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAQA,OAAM,MAAOA,gBAAgB;EAK3BC;IAJA,mBAAc,GAAG,KAAK;IACtB,yBAAoB,GAAG,wBAAwB;IAC/C,eAAU,GAAG,aAAa;IAQ1B,aAAQ,GAAG,+BAA+B;IALxCC,UAAU,CAAC,MAAK;MACd,IAAI,CAACC,cAAc,GAAG,IAAI;IAC5B,CAAC,EAAE,IAAI,CAAC;EACV;EAIAC,cAAc;IACZ,IAAI,CAACC,oBAAoB,GACvB,8BAA8B,GAAG,IAAI,CAACC,UAAU;EACpD;EAEAC,cAAc,CAACC,KAAY;IACzB,IAAI,CAACF,UAAU,GAAsBE,KAAK,CAACC,MAAO,CAACC,KAAK;EAC1D;;AApBWV,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR7BC,6BAAO;MAAAA,2BAAW;MAAAA,iBAAQ;MAE1BA,gCAAmE;MAA3BA;QAAA;MAAA,EAAwB;MAAhEA,iBAAmE;MACnEA,yBAAG;MAAAA,YAAgB;MAAAA,iBAAI;MACvBA,iCAIC;MADCA;QAAA,OAASC,oBAAgB;MAAA,EAAC;MAE1BD,6BACF;MAAAA,iBAAS;MACTA,uBAA0C;MAG1CA,yBAAG;MAAAA,YAA0B;MAAAA,iBAAI;MAEjCA,wBAA8B;;;MAdUA,eAAwB;MAAxBA,wCAAwB;MAC7DA,eAAgB;MAAhBA,oCAAgB;MAGjBA,eAA4B;MAA5BA,8CAA4B;MAK3BA,eAAkC;MAAlCA,oDAAkC;MAGlCA,eAA0B;MAA1BA,8CAA0B;MAE1BA,eAAsB;MAAtBA,wCAAsB","names":["ServersComponent","constructor","setTimeout","allowNewServer","onCreateServer","serverCreationStatus","serverName","onUpdateServer","event","target","value","selectors","attrs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Johan\\Desktop\\AngularDemo\\my-first-app\\src\\app\\servers\\servers.component.ts","C:\\Users\\Johan\\Desktop\\AngularDemo\\my-first-app\\src\\app\\servers\\servers.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: '.app-servers' /* '[app-servers]', */,\r\n  /* template: `<app-server></app-server> <app-server></app-server>`, */\r\n  templateUrl: './servers.component.html',\r\n  styleUrls: ['./servers.component.css'],\r\n})\r\nexport class ServersComponent {\r\n  allowNewServer = false;\r\n  serverCreationStatus = 'No server was created!';\r\n  serverName = 'Test Server';\r\n\r\n  constructor() {\r\n    setTimeout(() => {\r\n      this.allowNewServer = true;\r\n    }, 2000);\r\n  }\r\n\r\n  testText = 'Då ska vi se om det fungerar.';\r\n\r\n  onCreateServer() {\r\n    this.serverCreationStatus =\r\n      'Server was created! Name is ' + this.serverName;\r\n  }\r\n\r\n  onUpdateServer(event: Event) {\r\n    this.serverName = (<HTMLInputElement>event.target).value;\r\n  }\r\n}\r\n","<label>Server name</label>\r\n<!-- <input type=\"text\" class=\"form\" (input)=\"onUpdateServer($event)\" /> -->\r\n<input type=\"text\" class=\"form-control\" [(ngModel)]=\"serverName\" />\r\n<p>{{ serverName }}</p>\r\n<button\r\n  class=\"btn btn-primary\"\r\n  [disabled]=\"!allowNewServer\"\r\n  (click)=\"onCreateServer()\"\r\n>\r\n  Add Server\r\n</button>\r\n<p [innerText]=\"serverCreationStatus\"></p>\r\n\r\n<!-- <p [innerText]=\"allowNewServer\"></p> -->\r\n<p>{{ serverCreationStatus }}</p>\r\n\r\n<p [innerText]=\"testText\"></p>\r\n\r\n<app-server></app-server>\r\n<app-server></app-server>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}